# === Server Configuration ===
server.port=${PORT:8080}

# === Database Configuration ===
frontend.url=${FRONTEND_URL}
deployment.mode=production
short.frontend.url=${SHORT_FRONTEND_URL:https://hanza.la}
click.sync.interval.ms=14400000
dashboard.cache.ttl=3600000
clicks.cache.ttl=86400000

# === Redis Configuration ===
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.database=0
spring.data.redis.timeout=5000
spring.data.redis.ssl.enabled=true
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# === Hikari Connection Pool Configuration (Updated) ===
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.leak-detection-threshold=30000

spring.jpa.database=default
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false

# === Flyway Migration ===
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.url=${SPRING_DATASOURCE_URL}
spring.flyway.user=${SPRING_DATASOURCE_USERNAME}
spring.flyway.password=${SPRING_DATASOURCE_PASSWORD}

# === Session Configuration ===
spring.session.store-type=none
server.servlet.session.timeout=30m
server.forward-headers-strategy=framework

# === GitHub OAuth2 ===
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.provider.github.user-name-attribute=login

# === Google OAuth2 ===
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# === JWT Secret ===
spring.jwt.secret=${JWT_SECRET}

# === Email Service ===
spring.mail.host=smtp.sendgrid.net
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=apikey
spring.mail.password=${SENDGRID_API_KEY}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.sendgrid.net
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.from=MiniLink <minilink@cryptoutils.xyz>

# === Actuator Configuration ===
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.health.livenessState.include-details=always
management.health.readinessState.include-details=always
management.endpoint.health.probes.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.ping.enabled=true

# === Optional Debugging (Uncomment when needed) ===
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true

# Google Safe Browsing API Configuration
google.safebrowsing.api.key=${GOOGLE_SAFEBROWSING_API}